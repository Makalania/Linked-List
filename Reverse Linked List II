/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode reverseBetween(ListNode head, int m, int n) {
        if (head == null) {
            return null;
        }
        
        ListNode dummy = new ListNode(-1);
        dummy.next = head;
        ListNode pre = dummy;
        ListNode cur = dummy.next;
        
        for (int i = 0;i < m - 1; i++) {
            pre = pre.next;
            cur = cur.next;
        }
        
        ListNode next = cur.next;
        
        for(int j = 0; j < n - m; j++) {
            cur.next = next.next;
            next.next = pre.next;
            pre.next = next;
            next = cur.next;
            
        }
        
    //    reverse(pre, cur);
        
        return dummy.next;
    }
    
    /*
    private void reverse(ListNode pre, ListNode cur) {
        ListNode end = cur;
        
        while (pre.next != end) {
            ListNode temp = pre.next;
            pre.next = pre.next.next;
            temp.next = cur.next;
            cur.next = temp;
        }
    }
    */
}
