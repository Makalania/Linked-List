/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    public List<Interval> insert(List<Interval> intervals, Interval newInterval) {
        List<Interval> res = new ArrayList<Interval>();
        if (newInterval == null) {
            return intervals;
        }
        
        if (intervals == null || intervals.size() == 0) {
            res.add(newInterval);
            return res;
        }
        
  /*      Comparator<Interval> compare = new Comparator<Interval>() {
            public int compare (Interval interval1, Interval interval2) {
                Integer l1 = interval1.start;
                Integer l2 = interval2.start;
                return l1.compareTo(l2);
            }
        };
        
        Collections.sort(intervals, compare);
        
        */
        
        int len = intervals.size();
        int i = 0;
        
        while (i < len) {
            Interval next = intervals.get(i);
            if (next.start > newInterval.end) {
                res.add(newInterval);
                newInterval = next;
            }
            else if (newInterval.start > next.end) {
                res.add(next);
            }
            else {
                newInterval.start = Math.min(newInterval.start, next.start);
                newInterval.end = Math.max(newInterval.end, next.end);
            }
            i++;
        }
        res.add(newInterval);
        
        return res;
        
        
    }
}
