/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        if (l1 == null) {
            return l2;
        }
        
        if (l2 == null) {
            return l1;
        }
        
        int advance  = 0;
        ListNode temp1 = l1;
        ListNode temp2 = l2;
        ListNode dummy = new ListNode(-1);
        ListNode cur = dummy;
        
        while (temp1 != null && temp2 != null) {
            ListNode newNode = new ListNode((temp1.val + temp2.val + advance) % 10);
            cur.next = newNode;
            cur = cur.next;
            advance = (temp1.val + temp2.val + advance) / 10;
            temp1 = temp1.next;
            temp2 = temp2.next;
        }
        
        while (temp1 != null) {
            cur.next = new ListNode((temp1.val + advance) % 10);
            cur = cur.next;
            advance = (temp1.val + advance) / 10;
            temp1 = temp1.next;
        }
        
        while (temp2 != null) {
            cur.next = new ListNode((temp2.val + advance) % 10);
            cur = cur.next;
            advance = (temp2.val + advance) / 10;
            temp2 = temp2.next;
        }
        
        if (advance != 0) {
            cur.next = new ListNode(advance);
        }
        
        
        return dummy.next;
    }
}
